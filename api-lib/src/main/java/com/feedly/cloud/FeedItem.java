/*
 * MIT License
 *
 * Copyright (c) 2016 Hossain Khan
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/*
 * Feedly Cloud API
 * The feedly Cloud API  This describes the resources that make up the official feedly cloud API v3. If you have any problems or requests please contact us through the [developer forum](https://groups.google.com/forum/#!forum/feedly-cloud).  All API access is over HTTP or HTTPS, and accessed from the cloud.feedly.com domain. All data is sent and received as JSON.  Blank fields are omitted.  All timestamps are UTC EPOCH in milliseconds (number of milliseconds since January 1st 1970, UTC timezone). 
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.feedly.cloud;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;


/**
 * FeedItem
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-11-17T21:05:09.739-05:00")
public class FeedItem   {
  @SerializedName("feedId")
  private String feedId = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("website")
  private String website = null;

  @SerializedName("visualUrl")
  private String visualUrl = null;

  @SerializedName("iconUrl")
  private String iconUrl = null;

  @SerializedName("coverUrl")
  private String coverUrl = null;

  @SerializedName("language")
  private String language = null;

  @SerializedName("velocity")
  private Float velocity = null;

  @SerializedName("subscribers")
  private Long subscribers = null;

  @SerializedName("curated")
  private Boolean curated = null;

  @SerializedName("featured")
  private Boolean featured = null;

  @SerializedName("lastUpdated")
  private Long lastUpdated = null;

  public FeedItem feedId(String feedId) {
    this.feedId = feedId;
    return this;
  }

   /**
   * the unique, immutable id of this feed. This is a resource id with format `feed/:url` example - `feed/http://feeds.engadget.com/weblogsinc/engadget`
   * @return feedId
  **/
  @ApiModelProperty(example = "feed/http://androidcommunity.com/feed/", required = true, value = "the unique, immutable id of this feed. This is a resource id with format `feed/:url` example - `feed/http://feeds.engadget.com/weblogsinc/engadget`")
  public String getFeedId() {
    return feedId;
  }

  public void setFeedId(String feedId) {
    this.feedId = feedId;
  }

  public FeedItem title(String title) {
    this.title = title;
    return this;
  }

   /**
   * the feed name.
   * @return title
  **/
  @ApiModelProperty(example = "null", required = true, value = "the feed name.")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public FeedItem description(String description) {
    this.description = description;
    return this;
  }

   /**
   * the feed description.
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "the feed description.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public FeedItem website(String website) {
    this.website = website;
    return this;
  }

   /**
   * the website for this feed.
   * @return website
  **/
  @ApiModelProperty(example = "null", value = "the website for this feed.")
  public String getWebsite() {
    return website;
  }

  public void setWebsite(String website) {
    this.website = website;
  }

  public FeedItem visualUrl(String visualUrl) {
    this.visualUrl = visualUrl;
    return this;
  }

   /**
   * the visual/icon URL for this feed.
   * @return visualUrl
  **/
  @ApiModelProperty(example = "null", value = "the visual/icon URL for this feed.")
  public String getVisualUrl() {
    return visualUrl;
  }

  public void setVisualUrl(String visualUrl) {
    this.visualUrl = visualUrl;
  }

  public FeedItem iconUrl(String iconUrl) {
    this.iconUrl = iconUrl;
    return this;
  }

   /**
   * the icon URL for this feed.
   * @return iconUrl
  **/
  @ApiModelProperty(example = "http://storage.googleapis.com/site-assets/6ZG-RMo52Ow3y7H35IgpBqTP75WZXqRbkM1jB-YO-ts_icon-154124f9822", value = "the icon URL for this feed.")
  public String getIconUrl() {
    return iconUrl;
  }

  public void setIconUrl(String iconUrl) {
    this.iconUrl = iconUrl;
  }

  public FeedItem coverUrl(String coverUrl) {
    this.coverUrl = coverUrl;
    return this;
  }

   /**
   * the cover image URL for this feed.
   * @return coverUrl
  **/
  @ApiModelProperty(example = "http://storage.googleapis.com/site-assets/6ZG-RMo52Ow3y7H35IgpBqTP75WZXqRbkM1jB-YO-ts_cover-154124f9822", value = "the cover image URL for this feed.")
  public String getCoverUrl() {
    return coverUrl;
  }

  public void setCoverUrl(String coverUrl) {
    this.coverUrl = coverUrl;
  }

  public FeedItem language(String language) {
    this.language = language;
    return this;
  }

   /**
   * this field is a combination of the language reported by the RSS feed, and the language automatically detected from the feed’s content. It might not be accurate, as many feeds misreport it.
   * @return language
  **/
  @ApiModelProperty(example = "null", value = "this field is a combination of the language reported by the RSS feed, and the language automatically detected from the feed’s content. It might not be accurate, as many feeds misreport it.")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public FeedItem velocity(Float velocity) {
    this.velocity = velocity;
    return this;
  }

   /**
   * the average number of articles published weekly. This number is updated every few days.
   * @return velocity
  **/
  @ApiModelProperty(example = "null", value = "the average number of articles published weekly. This number is updated every few days.")
  public Float getVelocity() {
    return velocity;
  }

  public void setVelocity(Float velocity) {
    this.velocity = velocity;
  }

  public FeedItem subscribers(Long subscribers) {
    this.subscribers = subscribers;
    return this;
  }

   /**
   * number of feedly cloud subscribers who have this feed in their subscription list.
   * @return subscribers
  **/
  @ApiModelProperty(example = "52907", required = true, value = "number of feedly cloud subscribers who have this feed in their subscription list.")
  public Long getSubscribers() {
    return subscribers;
  }

  public void setSubscribers(Long subscribers) {
    this.subscribers = subscribers;
  }

  public FeedItem curated(Boolean curated) {
    this.curated = curated;
    return this;
  }

   /**
   * Get curated
   * @return curated
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getCurated() {
    return curated;
  }

  public void setCurated(Boolean curated) {
    this.curated = curated;
  }

  public FeedItem featured(Boolean featured) {
    this.featured = featured;
    return this;
  }

   /**
   * Get featured
   * @return featured
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getFeatured() {
    return featured;
  }

  public void setFeatured(Boolean featured) {
    this.featured = featured;
  }

  public FeedItem lastUpdated(Long lastUpdated) {
    this.lastUpdated = lastUpdated;
    return this;
  }

   /**
   * the timestamp, in ms, when feedly cloud last receive an article from this feed.
   * @return lastUpdated
  **/
  @ApiModelProperty(example = "null", value = "the timestamp, in ms, when feedly cloud last receive an article from this feed.")
  public Long getLastUpdated() {
    return lastUpdated;
  }

  public void setLastUpdated(Long lastUpdated) {
    this.lastUpdated = lastUpdated;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FeedItem feedItem = (FeedItem) o;
    return Objects.equals(this.feedId, feedItem.feedId) &&
        Objects.equals(this.title, feedItem.title) &&
        Objects.equals(this.description, feedItem.description) &&
        Objects.equals(this.website, feedItem.website) &&
        Objects.equals(this.visualUrl, feedItem.visualUrl) &&
        Objects.equals(this.iconUrl, feedItem.iconUrl) &&
        Objects.equals(this.coverUrl, feedItem.coverUrl) &&
        Objects.equals(this.language, feedItem.language) &&
        Objects.equals(this.velocity, feedItem.velocity) &&
        Objects.equals(this.subscribers, feedItem.subscribers) &&
        Objects.equals(this.curated, feedItem.curated) &&
        Objects.equals(this.featured, feedItem.featured) &&
        Objects.equals(this.lastUpdated, feedItem.lastUpdated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(feedId, title, description, website, visualUrl, iconUrl, coverUrl, language, velocity, subscribers, curated, featured, lastUpdated);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FeedItem {\n");
    
    sb.append("    feedId: ").append(toIndentedString(feedId)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    website: ").append(toIndentedString(website)).append("\n");
    sb.append("    visualUrl: ").append(toIndentedString(visualUrl)).append("\n");
    sb.append("    iconUrl: ").append(toIndentedString(iconUrl)).append("\n");
    sb.append("    coverUrl: ").append(toIndentedString(coverUrl)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    velocity: ").append(toIndentedString(velocity)).append("\n");
    sb.append("    subscribers: ").append(toIndentedString(subscribers)).append("\n");
    sb.append("    curated: ").append(toIndentedString(curated)).append("\n");
    sb.append("    featured: ").append(toIndentedString(featured)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

